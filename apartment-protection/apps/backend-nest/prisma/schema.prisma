// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  firstName String?
  lastName  String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String   @default("USER")
}

model Apartment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  city            String
  street          String
  streetNumber    String
  floorNumber     Int
  apartmentNumber Int
  split           Boolean
  resident        Resident[]
  rooms           Room[]
}

model Resident {
  id                Int                    @id @default(autoincrement())
  firstName         String
  lastName          String
  mobilePhoneNumber String
  homePhoneNumber   String?
  comments          String[]
  interactions      ResidentInteractions[]

  apartmentId Int
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
}

model ResidentInteractions {
  id              Int      @id @default(autoincrement())
  interactionType String
  date            DateTime
  content         String

  resident   Resident? @relation(fields: [residentId], references: [id])
  residentId Int?
}

model Room {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roomNumber            Int
  airConditionerExists  Boolean
  airConditionerWorking Boolean
  airConditionerAge     Int
  airConditionerType    String
  dressExists           Boolean
  dressComment          String
  comments              String[]
  interruptions         String[]
  windows               Window[]

  apartmentId Int
  apartment   Apartment @relation(fields: [apartmentId], references: [id])
}

model Window {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  windowNumber Int
  windowType   String
  wingsAmount  Int
  width        Int
  height       Int
  thickness    Int
  uk           Int
  color        String
  glaze        String
  material     String
  bars         Boolean
  barsType     String
  net          String
  shutter      String

  room   Room @relation(fields: [roomId], references: [id])
  roomId Int
}
